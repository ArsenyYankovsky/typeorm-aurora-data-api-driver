version: 2
jobs:
  checks:
    docker:
      - image: "node:latest"
    steps:
      - checkout
      - run:
          name: yarn
          command: yarn
      - run:
          name: lint
          command: yarn lint
      - run:
          name: test
          command: yarn test:unit

  release:
    docker:
      - image: "circleci/node:latest"
    steps:
      - checkout
      - run:
          name: yarn
          command: yarn
      - run:
          name: build
          command: yarn build
      - run:
          name: release
          command: yarn semantic-release || true

  prepare-func-tests-released:
    docker:
      - image: "circleci/node:latest"
    steps:
      - checkout
      - run:
          name: yarn
          command: yarn
      - run:
          name: install additional dependencies
          command: yarn add typeorm aws-sdk typeorm-aurora-data-api-driver
      - persist_to_workspace:
          root: .
          paths:
            - .

  run-mysql-func-tests-released:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - attach_workspace:
          at: .
      - run: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: upgrade node
          command: nvm install 12
      - run:
          name: install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update || true
            sudo apt-get install yarn
      - run:
          name: start local mysql
          command: docker-compose -f docker/mysql.yml up -d
      - run:
          name: run mysql functional test
          command: |
            nvm use 12
            yarn test:mysql-func

  run-pg-func-tests-released:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - attach_workspace:
          at: .
      - run: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: upgrade node
          command: nvm install 12
      - run:
          name: install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update || true
            sudo apt-get install yarn
      - run:
          name: start local pg
          command: docker-compose -f docker/pg.yml up -d
      - run:
          name: run pg functional test
          command: |
            nvm use 12
            yarn test:pg-func

  prepare-func-tests:
    docker:
      - image: "circleci/node:latest"
    steps:
      - checkout
      - run:
          name: yarn
          command: yarn
      - run:
          name: build
          command: yarn build
      - run:
          name: checkout typeorm
          command: git clone --single-branch --branch master https://github.com/typeorm/typeorm.git
      - run:
          name: build typeorm
          command: cd typeorm/ && npm i && npm run package
      - run:
          name: install aws-sdk
          command: npm i aws-sdk
      - persist_to_workspace:
          root: .
          paths:
            - .

  run-mysql-func-tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - attach_workspace:
          at: .
      - run: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: upgrade node
          command: nvm install 12
      - run:
          name: install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update || true
            sudo apt-get install yarn
      - run:
          name: link modules
          command: yarn link && cd typeorm/build/package && yarn link && yarn link typeorm-aurora-data-api-driver && cd ../../../ && yarn link typeorm
      - run:
          name: start local mysql
          command: docker-compose -f docker/mysql.yml up -d
      - run:
          name: run mysql functional test
          command: |
            nvm use 12
            yarn test:mysql-func

  run-pg-func-tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - attach_workspace:
          at: .
      - run: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: upgrade node
          command: nvm install 12
      - run:
          name: install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update || true
            sudo apt-get install yarn
      - run:
          name: link modules
          command: yarn link && cd typeorm/build/package && yarn link && yarn link typeorm-aurora-data-api-driver && cd ../../../ && yarn link typeorm
      - run:
          name: start local mysql
          command: docker-compose -f docker/pg.yml up -d
      - run:
          name: run mysql functional test
          command: |
            nvm use 12
            yarn test:pg-func

workflows:
  version: 2
  release:
    jobs:
      - checks:
          filters:
            branches:
              only:
                - master
      - prepare-func-tests:
          filters:
            branches:
              only:
                - master
          requires:
            - checks
      - run-mysql-func-tests:
          filters:
            branches:
              only:
                - master
          requires:
            - prepare-func-tests
      - run-pg-func-tests:
          filters:
            branches:
              only:
                - master
          requires:
            - prepare-func-tests
      - release:
          filters:
            branches:
              only:
                - master
          requires:
            - run-pg-func-tests
            - run-mysql-func-tests

  nightly-released:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checks
      - prepare-func-tests-released:
          requires:
            - checks
      - run-mysql-func-tests-released:
          requires:
            - prepare-func-tests-released
      - run-pg-func-tests-released:
          requires:
            - prepare-func-tests-released

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checks
      - prepare-func-tests:
          requires:
            - checks
      - run-mysql-func-tests:
          requires:
            - prepare-func-tests
      - run-pg-func-tests:
          requires:
            - prepare-func-tests

  check-commit:
    jobs:
      - checks
      - prepare-func-tests:
          requires:
            - checks
      - run-mysql-func-tests:
          requires:
            - prepare-func-tests
      - run-pg-func-tests:
          requires:
            - prepare-func-tests
